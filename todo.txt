TODO:
  -- FEATURES
    - jump to line (or line and column)
    - indent/unindent
    - make '.' work better (right now we're saving literally every vim command in the 'last used' list)
    - commands
        - search (and find, replace, etc)
          - case insensitive
          - replace
            - replace next
            - replace all
          - find next and continue highlighting (like cmd+d in sublime)
          - find (and highlight) all
      - open
      - save
    - ui info like sublime has (line/column numbers, Tab Size, etc. on bottom)
    - file tree
    - open anything (cmd+p in sublime)
    - macros
    - tokenization (possibly supporting custom api?) and highlighting of grammars
        - will probably need to have one more rope structure for styles
    - configure tabs/spaces
    - make what a 'word' is in move-by-words configurable
    - watch open files for changes (?)
      - indicate when a file has changed on disk since we started editing it
      - warn when going to save a file but it has changed since we've opened it
      - maybe just provide a 'reload from disk' command
    - autocomplete
    - plugin architecture, user-created commands
        - vim-style bindings for json for example (moving up and down through parent/child ast nodes rather than by line, etc.)
    - marks (?)
    - folding (?)
    - support other file encodings
      - UTF-16
        - Use BOM if applicable to determine file encoding (and, of course, byte order)
      - binary?

  -- PERFORMANCE
    - fix kmp search incremental stuff

  -- CORRECTNESS
    - minimizing and then un-minimizing crashes
    - handle combining glyphs
